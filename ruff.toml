# Enable the pycodestyle (`E`) and Pyflakes (`F`) rules by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.

line-length = 100
target-version = "py39"
fix = true


respect-gitignore = true
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "venv",
    ".venv",
]

[lint]
select = [
    "E",   # pycodestyle errors
    "F",   # pyflakes
    "I",   # isort
    "W",   # pycodestyle warnings
    "C90", # mccabe
    "N",   # pep8-naming
    "B",   # flake8-bugbear
    "UP",  # pyupgrade
    "S",   # flake8-bandit
]
ignore = [
    "E501", # line too long (handled by formatter)
    "B905", # `zip()` without an explicit `strict=` parameter
    "C901", # McCabe complexity, see TODO below
]

# TODO: Enable this once major refactoring is done so we can enforce it
# [lint.mccabe]
# max-complexity = 10

[lint.flake8-comprehensions]
allow-dict-calls-with-keyword-arguments = true

[lint.per-file-ignores]
"__init__.py" = ["E402"]
"**/{tests,docs,tools}/*" = ["E402", "S101"]

[lint.pycodestyle]
max-doc-length = 120

[lint.pydocstyle]
convention = "google"

[lint.flake8-bugbear]
extend-immutable-calls = [
    "fastapi.Depends",
    "fastapi.Query",
    "fastapi.Header",
    "fastapi.Body",
    "fastapi.Path",
]

[lint.flake8-quotes]
docstring-quotes = "double"
inline-quotes = "single"

[lint.flake8-import-conventions.aliases]
numpy = "np"
pandas = "pd"
matplotlib = "plt"

[lint.isort]
known-first-party = ["memoryweave"]
combine-as-imports = true
split-on-trailing-comma = false
